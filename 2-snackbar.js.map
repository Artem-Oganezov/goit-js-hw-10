{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["\nimport iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst form = document.querySelector('.form')\nconst btn = document.querySelector('.btn_create');\nconst fulfilled = document.querySelector('input[value=\"fulfilled\"]');\nconst rejected = document.querySelector('input[value=\"rejected\"]');\n \n \n\nform.addEventListener('submit', (eve) => {\n    eve.preventDefault();\n    const inputDelay = document.querySelector('input[name=\"delay\"]');\n    const delay = Number(inputDelay.value);\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (fulfilled.checked) {\n                resolve(delay)\n            } else if (rejected.checked) {\n                reject(delay)\n            }\n        }, delay);\n    });\n\n    promise.then((result) => {\n        iziToast.success({\n            position: \"topRight\",\n            message: `Fulfilled promise in ${result}ms`,\n        });\n    }).catch((err) => {\n        iziToast.error({\n            position: \"topRight\",\n            message: `Rejected promise in ${err}ms`,\n        });\n    });\n});\n   \n"],"names":["form","fulfilled","rejected","eve","inputDelay","delay","resolve","reject","result","iziToast","err"],"mappings":"oFAMA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAC/B,SAAS,cAAc,aAAa,EAChD,MAAMC,EAAY,SAAS,cAAc,0BAA0B,EAC7DC,EAAW,SAAS,cAAc,yBAAyB,EAIjEF,EAAK,iBAAiB,SAAWG,GAAQ,CACrCA,EAAI,eAAc,EAClB,MAAMC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAQ,OAAOD,EAAW,KAAK,EACrB,IAAI,QAAQ,CAACE,EAASC,IAAW,CAC7C,WAAW,IAAM,CACTN,EAAU,QACVK,EAAQD,CAAK,EACNH,EAAS,SAChBK,EAAOF,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,EAEO,KAAMG,GAAW,CACrBC,EAAS,QAAQ,CACb,SAAU,WACV,QAAS,wBAAwBD,CAAM,IACnD,CAAS,CACT,CAAK,EAAE,MAAOE,GAAQ,CACdD,EAAS,MAAM,CACX,SAAU,WACV,QAAS,uBAAuBC,CAAG,IAC/C,CAAS,CACT,CAAK,CACL,CAAC"}